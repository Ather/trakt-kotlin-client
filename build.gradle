plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'maven-publish'
}

group 'com.atherapp.thirdparty.api'
version '0.8.2'

sourceCompatibility = 1.10
targetCompatibility = 1.10


repositories {
    maven { url "https://dl.bintray.com/kotlin/kotlinx/" }
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/kotlin-eap" }
}

dependencies {
    implementation(group: 'com.github.salomonbrys.kotson', name: 'kotson', version: '2.5.0') {
        exclude(module: 'kotlin-stdlib')
    }
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: '1.3.0'
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.0'
    implementation group: 'com.damnhandy', name: 'handy-uri-templates', version: '2.1.6'
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.0.0'
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test', version: '1.3.0'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.0.0'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core-common', version: '1.0.0'

    implementation 'com.github.kittinunf.fuel:fuel:1.16.0'
    implementation 'com.github.kittinunf.fuel:fuel-coroutines:1.16.0'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "TripleFrequency"
            name "Michael Haas"
            email "triplefrequency@triplefrequency.com"
        }
    }

    scm {
        url "https://github.com/Ather/trakt-kotlin-client"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.atherapp.thirdparty.api'
            artifactId 'trakt-kotlin-client'
            version '0.8.2'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'An API client for Trakt.tv written in Kotlin.')
                root.appendNode('name', 'Trakt Kotlin Client')
                root.appendNode('url', 'https://github.com/Ather/trakt-kotlin-client')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
    publications = ['mavenPublication']

    pkg {
        repo = 'trakt-kotlin-client'
        name = 'trakt-kotlin-client'
        userOrg = 'ather'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Ather/trakt-kotlin-client.git'
        version {
            name = '0.8.2'
            desc = '0.8.2'
            released = new Date()
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}